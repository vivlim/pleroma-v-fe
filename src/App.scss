@import './_variables.scss';

#app {
  background-size: cover;
  background-attachment: fixed;
  background-repeat: no-repeat;
  background-position: 0 50px;
  min-height: 100vh;
  max-width: 100%;
  overflow: hidden;
}

i {
  user-select: none;
}

h4 {
  margin: 0;
}

#content {
  box-sizing: border-box;
  padding-top: 60px;
  margin: auto;
  min-height: 100vh;
  max-width: 980px;
  background-color: rgba(0,0,0,0.15);
  align-content: flex-start;
}

.text-center {
  text-align: center;
}

body {
  font-family: sans-serif;
  font-size: 14px;
  margin: 0;
  color: $fallback--fg;
  color: var(--fg, $fallback--fg);
  max-width: 100vw;
  overflow-x: hidden;
}

a {
  text-decoration: none;
  color: $fallback--link;
  color: var(--link, $fallback--link);
}

button{
  user-select: none;
  color: $fallback--fg;
  color: var(--fg, $fallback--fg);
  background-color: $fallback--btn;
  background-color: var(--btn, $fallback--btn);
  border: none;
  border-radius: $fallback--btnRadius;
  border-radius: var(--btnRadius, $fallback--btnRadius);
  cursor: pointer;
  border-top: 1px solid rgba(255, 255, 255, 0.2);
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
  box-shadow: 0px 0px 2px black;
  font-size: 14px;
  font-family: sans-serif;

  &:hover {
    box-shadow: 0px 0px 4px rgba(255, 255, 255, 0.3);
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }

  &.pressed {
    color: $fallback--faint;
    color: var(--faint, $fallback--faint);
    background-color: $fallback--bg;
    background-color: var(--bg, $fallback--bg)
  }
}

label.select {
  padding: 0;

}

input, textarea, .select {
  border: none;
  border-radius: $fallback--inputRadius;
  border-radius: var(--inputRadius, $fallback--inputRadius);
  border-bottom: 1px solid rgba(255, 255, 255, 0.2);
  border-top: 1px solid rgba(0, 0, 0, 0.2);
  box-shadow: 0px 0px 2px black inset;
  background-color: $fallback--input;
  background-color: var(--input, $fallback--input);
  color: $fallback--lightFg;
  color: var(--lightFg, $fallback--lightFg);
  font-family: sans-serif;
  font-size: 14px;
  padding: 8px 7px;
  box-sizing: border-box;
  display: inline-block;
  position: relative;
  height: 29px;
  line-height: 16px;

  .icon-down-open {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 5px;
    height: 100%;
    color: $fallback--fg;
    color: var(--fg, $fallback--fg);
    line-height: 29px;
    z-index: 0;
    pointer-events: none;
  }

  select {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background: transparent;
    border: none;
    margin: 0;
    color: $fallback--fg;
    color: var(--fg, $fallback--fg);
    padding: 4px 2em 3px 3px;
    width: 100%;
    z-index: 1;
    height: 29px;
    line-height: 16px;
  }

  &[type=radio],
  &[type=checkbox] {
    display: none;
    &:checked + label::before {
      color: $fallback--fg;
      color: var(--fg, $fallback--fg);
    }
    + label::before {
      display: inline-block;
      content: '✔';
      transition: color 200ms;
      width: 1.1em;
      height: 1.1em;
      border-radius: $fallback--checkBoxRadius;
      border-radius: var(--checkBoxRadius, $fallback--checkBoxRadius);
      border-bottom: 1px solid rgba(255, 255, 255, 0.2);
      border-top: 1px solid rgba(0, 0, 0, 0.2);
      box-shadow: 0px 0px 2px black inset;
      margin-right: .5em;
      background-color: $fallback--input;
      background-color: var(--input, $fallback--input);
      vertical-align: top;
      text-align: center;
      line-height: 1.1em;
      font-size: 1.1em;
      box-sizing: border-box;
      color: transparent;
      overflow: hidden;
      box-sizing: border-box;
    }
  }
}

i[class*=icon-] {
  color: $fallback--icon;
  color: var(--icon, $fallback--icon)
}


.container {
  display: flex;
  flex-wrap: wrap;
  margin: 0;
  padding: 0 10px 0 10px;
}

.gaps {
  margin: -1em 0 0 -1em;
}

.item {
  flex: 1;
  line-height: 50px;
  height: 50px;
  overflow: hidden;

  .nav-icon {
    font-size: 1.1em;
    margin-left: 0.4em;
  }
}

.gaps > .item {
  padding: 1em 0 0 1em;
}

.auto-size {
  flex: 1
}

nav {
  width: 100%;
  align-items: center;
  position: fixed;
  height: 50px;

  .inner-nav {
    padding-left: 20px;
    padding-right: 20px;
    display: flex;
    align-items: center;
    flex-basis: 970px;
    margin: auto;
    height: 50px;
    background-repeat: no-repeat;
    background-position: center;
    background-size: auto 80%;

    a i {
      color: $fallback--link;
      color: var(--link, $fallback--link);
    }
  }
}

main-router {
  flex: 1;
}

.status.compact {
  color: rgba(0, 0, 0, 0.42);
  font-weight: 300;

  p {
    margin: 0;
    font-size: 0.8em
  }
}

/* Panel */

.panel {
  display: flex;
  flex-direction: column;
  margin: 0.5em;

  background-color: $fallback--bg;
  background-color: var(--bg, $fallback--bg);

  border-radius: $fallback--panelRadius;
  border-radius: var(--panelRadius, $fallback--panelRadius);
  box-shadow: 1px 1px 4px rgba(0,0,0,.6);
}

.panel-body:empty::before {
  content: "¯\\_(ツ)_/¯"; // Could use words but it'd require translations
  display: block;
  margin: 1em;
  text-align: center;
}

.panel-heading {
  border-radius: $fallback--panelRadius $fallback--panelRadius 0 0;
  border-radius: var(--panelRadius, $fallback--panelRadius) var(--panelRadius, $fallback--panelRadius) 0 0;
  background-size: cover;
  padding: 0.6em 1.0em;
  text-align: left;
  font-size: 1.3em;
  line-height: 24px;
  background-color: $fallback--btn;
  background-color: var(--btn, $fallback--btn);
}

.panel-heading.stub {
  border-radius: $fallback--panelRadius;
  border-radius: var(--panelRadius, $fallback--panelRadius);
}

.panel-footer {
  border-radius: 0 0 $fallback--panelRadius $fallback--panelRadius;
  border-radius: 0 0 var(--panelRadius, $fallback--panelRadius) var(--panelRadius, $fallback--panelRadius);
}

.panel-body > p {
  line-height: 18px;
  padding: 1em;
  margin: 0;
}

.container > * {
  min-width: 0px;
}

.fa {
  color: grey;
}

nav {
  z-index: 1000;
  background-color: $fallback--btn;
  background-color: var(--btn, $fallback--btn);
  color: $fallback--faint;
  color: var(--faint, $fallback--faint);
  box-shadow: 0px 0px 4px rgba(0,0,0,.6);
}

.fade-enter-active, .fade-leave-active {
  transition: opacity .2s
}
.fade-enter, .fade-leave-active {
  opacity: 0
}

.main {
  flex-basis: 60%;
  flex-grow: 1;
  flex-shrink: 1;
}

.sidebar-bounds {
  flex: 0;
  flex-basis: 35%;
}

.sidebar-flexer {
  flex: 1;
  flex-basis: 345px;
  width: 365px;
}

.mobile-shown {
  display: none;
}

.panel-switcher {
  display: none;
  width: 100%;
  height: 46px;
  button {
    display: block;
    flex: 1;
    max-height: 32px;
    margin: 0.5em;
    padding: 0.5em;
  }
}

@media all and (min-width: 960px) {
  body {
    overflow-y: scroll;
  }
  .sidebar-bounds {
    overflow: hidden;
    max-height: 100vh;
    width: 345px;
    position: fixed;
    margin-top: -10px;

    .sidebar-scroller {
      height: 96vh;
      width: 365px;
      padding-top: 10px;
      padding-right: 50px;
      overflow-x: hidden;
      overflow-y: scroll;
    }

    .sidebar {
      width: 345px;
    }
  }
  .sidebar-flexer {
    max-height: 96vh;
    flex-shrink: 0;
    flex-grow: 0;
  }
}

.alert {
  margin: 0.35em;
  padding: 0.25em;
  border-radius: $fallback--tooltipRadius;
  border-radius: var(--tooltipRadius, $fallback--tooltipRadius);
  color: $fallback--faint;
  color: var(--faint, $fallback--faint);
  min-height: 28px;
  line-height: 28px;

  &.error {
    background-color: $fallback--cAlertRed;
    background-color: var(--cAlertRed, $fallback--cAlertRed);
  }
}

.faint {
  color: $fallback--faint;
  color: var(--faint, $fallback--faint);
}

@media all and (max-width: 959px) {
  .mobile-hidden {
    display: none;
  }

  .panel-switcher {
    display: flex;
  }

  .container {
    padding: 0 0 0 0;
  }

  .panel {
    margin: 0.5em 0 0.5em 0;
  }
}

.item.right {
  text-align: right;
  padding-right: 20px;
}

/* begin simple CW hiding */
span.contentWarning:hover, 
span.contentWarning:hover p {
  color: var(--fg, $fallback--fg);
}

span.contentWarning, 
span.contentWarning p {
  background-color: var(--btn, $fallback--btn);
  color: var(--btn, $fallback--btn);
}

.contentWarningText::after {
  content: "(hover to show more)";
  font-size: 90%;
  margin-left: 8px;
}
/* end simple CW hiding */